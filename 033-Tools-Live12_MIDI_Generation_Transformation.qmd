# Tools - Live 12 MIDI Generation and Transformation {#033-Tools-Live12_MIDI_Generation_Transformation}

During the process of writing this book, Ableton released Live 12. With Live 12 there are a whole host of improvements and additions which make the life of someone making generative music a whole lot easier. In this chapter we'll look at the new compositional and MIDI tools. In the next chapter we'll look at new sequencer tools. In subsequent chapters we'll look at updates to modulation, and some specific Transformer and Generator tools.

```{r}
#| echo: FALSE
knitr::opts_chunk$set(echo = FALSE)
```

::: callout-tip
## Key idea

Live 12 contains a number of tools and new features which enhance how we can make generative music using Ableton Live. Some of these are enhancements to existing functionality, but there are many places where there are brand new features which could be used to create generative music, or provide idea generators for composition.

In particular note that you can Generate, commit to a pattern, then Transform the MIDI multiple times. This allows you to "stack" Transformations - for example, generating a pattern, then using Transform to change pitch, commit changes, then use a different Transform tool to change velocity, then use Transform again to change other elements, such as note division or the placement of notes in the clip.

Exploration of the combination of Generation and Transformation is encouraged to get the most out of these tools. You shouldn't view them as single tools that have to do everything in one go. Often the layering of Transformations will give the most interesting results.
:::


## MIDI Generation

Live 12 now comes with two new features built into MIDI clip creation: MIDI Generation and MIDI Transformation. MIDI Generation does what the name suggests - provides a range of different methods for generating new MIDI parts: rhythm - which creates sequences of MIDI notes by specifying the density of notes within a certain number of steps and then allowing you to choose permutations of these, stacks - which defines chords, seeds - which generates one or more "voices" of completely random notes (but these could conform to the clip scale setting) within the clip, shape - which generates notes by drawing in a pattern or shape, and Euclidean generators. And because what sits behind these generators is the power of Max for Live, the possibilities open up for a huge range of innovative MIDI generation.

```{r}
knitr::include_graphics(path = file.path(here::here(), "images", "Live12_MIDIGenerators.png"))
```

```{r}
knitr::include_graphics(path = file.path(here::here(), "images", "Live12_Max_MIDIGenerator.png"))
```

In Chapter 13 we looked at MIDI Generator devices including Max for Live devices. But having some similar functionality here "baked into" the Live MIDI clip tools puts these tools at the fingertips of anyone with Live 12 Suite.

```{r}
knitr::include_graphics(path = file.path(here::here(), "images", "Live12_Euclidean_Pattern.png"))
```

## MIDI Transformation

The MIDI Transformation tools includes tools to arpeggiate the notes within the clip, connect - connecting existing notes in the clip with passing tones, ornament - adding additional short notes before the main note, like a flam in drum terms, or mordent in classical notation, quantize - here applying quantisation non-destructively, i.e. you can see the effect of the amount of quantisation on the MIDI notes, recombine - which lets you select notes and then permute these (rotate the order, mirror, shuffle), span - which allows you to change the note lengths by various means, strum - which applies a rhythmic strum pattern to chords, and time warp - which can bend the timing within a bar, so although the bpm clock remains constant, MIDI notes in a clip can trigger with a more fluid timing.

```{r}
knitr::include_graphics(path = file.path(here::here(), "images", "Live12_MIDI_Transformers.png"))
```

Some of these Transformations will give really interesting results on pitched instruments, while others might be more suited to unpitched or rhythmic parts. It's worth exploring to see how they apply in different contexts.

Because the tools apply to creating and transforming MIDI in clips, they are really useful in the initial stage of production and composition where you want help to create something new. They can also help you create variations of existing clips, taking one good idea and evolving it into something completely different.

## Limitations

The limitation of these Generator and Transformation devices as they stand is that their processes apply to a MIDI clip and cannot be triggered remotely in performance or through clip automation. So while it's possible to randomly generate MIDI sequences, melodies, etc. the typical use for this is at the time of MIDI clip generation. It *is* possible to regenerate for a clip, but it would be tricky to do this during a live performance. So these tools might be thought of as tools to get started and generate ideas, rather than tools for generative performance.

## Extensions

Since these Generator and Transformer devices support Max for Live devices, it has opened up the doors for many developers to create really interesting new Generator and Transformer devices. One developer of note is Philip Meyer - https://meyer-devices.com - who has a collection of devices that enhance, evolve and augment the built-in Ableton Generator and Transformer devices. 

The beauty of Max for Live with Ableton Live Suite is the ability to create these kind of extensions and tools that integrate so well with Live's own internal devices.

### Generator - MDD Snake

In [Tools - MIDI Generators](#012-Tools-MIDI_Generators)
we mentioned the MDD Snake Max for Live MIDI generator
(https://maxforlive.com/library/device/10422/mdd-snake-midi-generator)
. This is a great sequencer modelled after the Make Noise Ren√© modular sequencer. The device gives you a four by four grid of notes, gates and velocities and it cycles through each of these in a given pattern. The default plays each row before moving on to the next row. But you can also choose to play through the notes column by column, in diagonals, and a variety of other patterns. Each pattern can play through forward, backward, cycle forward and back etc. 

The beauty of this little generator is that it decouples note pitch from gate (whether the note plays or not). So you can generate patterns of notes / pitches separately from the pattern of whether the note plays which avoids the machine gun pattern of constant 8th or 16th notes.

```{r}
knitr::include_graphics(path = file.path(here::here(), "images", "MIDI_Generator_MDDSnake.png"))
```

There's an interview with Maxime Dangles, create of the MDD Snake device here:
https://www.ableton.com/en/blog/maxime-dangles-unlikely-connections/.

### Generator - Turing Machine

We've also discussed the Turing Machine in  [Tools - MIDI Generators](#012-Tools-MIDI_Generators). Turing Machines create random sequences of notes and this MIDI Generator Max for Live device by Philip Meyer is essentially a little Turing Machine that will create a clip full of notes for you. Because the Turing Machine produces random note patterns, it's worth experimenting and generating a few patterns until you find one that works in context. Philip Meyer explains the device in more detail in this video: https://youtu.be/_LpA66peATg?si=-KgyOTrVt_sbTgv6&t=2191.

```{r}
knitr::include_graphics(path = file.path(here::here(), "images", "MIDI_Generator_TuringMachine.png"))
```

## Philip Meyer MIDI Tools

Philip Meyer has created a number of Generator and Transformer MIDI tools which are available via his website: https://meyer-devices.com. In the video linked above, Philip demonstrates each of these and it's worth reviewing the content of that video to both understand how the devices work, but also to see how he Generates, then Transforms clips. 



### Transformer - Develop

The Develop tool, which takes a phrase and then over a set number of generations (copies) it can include more notes with each generation (or Degrade to eliminate notes) through muting notes in the pattern. In the screenshot below notice how in the first repeat of the pattern, about 50% of the notes are muted, and then as the pattern repeats, more notes are unmuted until the final repeat has all notes playing.

The Deterministic mode mutes notes in the pattern while a Probabilistic mode reduces probability over generations. In Probabilistic mode you can also set a percentage (euclidean pattern) to specify which notes in the pattern have lower probability. This a really creative tool to introduce variation in note patterns so that they evolve rather than change suddenly.

Again, Philip presents the tool in this video: https://youtu.be/_LpA66peATg?si=pOATIb8VZp7j3eub&t=2915

```{r}
knitr::include_graphics(path = file.path(here::here(), "images", "MIDI_Transformer_Develop.png"))
```
