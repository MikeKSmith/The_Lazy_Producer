# Tools - Audio Generators {#014-Tools-Audio_Generators}

```{r}
#| echo: false
knitr::opts_chunk$set(echo = FALSE)
```

Create something from nothing with these audio generators. These aren't so much "instruments" - they do not need MIDI input to drive them, and will make noise as soon as you press "Play" on the Ableton transport. That's both a good thing and a bad thing - you may want to start a set with the faders down! These devices can be used to power a drone set very effectively though - just route them through additional effects and/or resonators to create some rich tones.

::: callout-tip
## Key idea

MIDI generators (as discussed in 
[Tools - MIDI Generators](#012-Tools-MIDI_Generators)
 produce MIDI notes which can be further processed via the MIDI plugins that we explored in 
 [Tools - MIDI tools](#004-Tools-MIDI_tools)
and then played through instruments. But Ableton Live also has some sound generators that will produce sounds without the need of MIDI input or in fact ***any*** input. We just need to think a little creatively and use a generous number of Audio plugins to process the sound into the shape we would like. These sound generators are more likely to produce drones and textures than melodies, so may augment some of the tools previously discussed.

::: 

## Pinging resonantors / resonant filters

There's a technique in synthesis where you "ping" a resonant filter with a click or burst of noise which provides the "exciter" to generate a tone. This is relatively simple to achieve in Ableton Live using stock effects in Live Suite. We use a burst of noise from the "Vinyl Distortion" plugin which emulates the crackles and noise from a vinyl record, gate this to only allow the crackles to come through. The "Erosion" plugin accentuates the noise around this crackle and the "Auto Filter" specifies a frequency band that will pass through to the later resonators and effects.

```{r}
knitr::include_graphics(path = file.path(here::here(), "images", "Pinging_Filters.png"))
```

Hainbach has a great video explaining the technique here: <https://www.youtube.com/watch?v=qJRXxkswXdg>. Ned Rush also routinely uses the Vinyl Distortion to ping other devices e.g. <https://www.youtube.com/watch?v=siWk44aAYeg>.

In our case, instead of using feedback with filters, we can exploit Ableton Live's own resonator plugins: "Resonator", "Spectral Resonator" and "Corpus". In the image below we're using the "Spectral Resonator" to generate some pitched tones. We're feeding it notes from an external MIDI clip which uses the same note probability techniques explained previously. This then feeds into the "Resonators" plugin which provides additional pitched resonance, and the "Spectral Time" plugin which smears out this pitched resonance so that it's not a short burst of pitched information.

```{r}
knitr::include_graphics(path = file.path(here::here(), "images", "Resonators.png"))
```

## Tree Tone

From the [Inspired by Nature pack](https://www.ableton.com/en/packs/inspired-nature/#?item_type=max_for_live) by Dillon Bastan the [Tree Tone](https://www.youtube.com/watch?v=_mk7qyzEcCQ) generator is primarily a resonant drone generator but with some additional bells and whistles. Literally. The "Tree" in the central panel has "branches" that define resonators / resonant frequencies. Thicker, longer branches have lower pitch and louder volume. Thinner branches have higher pitch but lower volume. In the image below the "Tree" has fewer large branches and so would be expected to have some lower drone sounds. The position of the branches to left or right is their position in panning. The "Noise" amount and filtering determines how much these resonators are excited by the noise. The "Wind" provides additional movement and modulation to the system - affecting volume and filtering. The "Rain" setting "pings" the resonators as with a "raindrop" (or mallet). More "Rain" and "Speed" will ping the resonators providing chimes. The "Algo/Mix" setting will affect the overall pitch of the system - lower values being warmer or darker, higher values brighter. Tuning the system will ensure that frequencies and "pings" from raindrops conform to a scale. "Inharmnic" will add some inharmonic frequencies or more "clangerous" sounds.

This is a deceptively useful generator, as it can be used to create beautiful drones, or you can switch off "Noise" and have just the "raindrops". Combining this with some additional resonators or effects can create an evolving, generative ambience just on its own.

Two Easter Eggs to Tree Tone exist: The top "microphone" button on the far right allows you to route ANY audio signal through Tree Tone and excite the resonators. So Tree Tone can be used as either as a generator OR an effect (similar to the Corpus device). Below this is the "Sine" button which opens modulation dialogue where you can device two LFOs and two envelopes and then route these to parameters of the device. So you don't need to stick with a static sound, and the envelopes can be triggered by incoming MIDI information.

```{r}
knitr::include_graphics(path = file.path(here::here(), "images", "Tree_tone.png"))
```

## Harmonic Drone Generator

Does exactly what is says on the tin. This is a drone generator from the [Drone Lab pack](https://www.ableton.com/en/packs/drone-lab/#?) in Ableton Suite. In the Harmonic Drone Generator you can set the root tone, and then the resonant frequencies of other resonators. When the button is lit orange above the resonator it will be heard. Below the resonator you can choose to add or decrease the resonant pitch (up to 10Hz either above or below). Note that resonant pitch tuning can be set to "Just" intonation or "Equal temperament". "Just" pitch divisions result in more harmonious noises, but don't necessarily correspond to tone pitches. So while "Just" will give you better sounding drones, don't be surprised if it sounds "off" compared to pitched notes from other sources...

Again, this is a nice generator to use as the fundamental source for a textured drone session. You can feed the output of this device through other effects to manipulate, distort, and augment sounds from it. You can also "play" the device using MIDI input. The "Glide" option gives a nice glide effect as the resonators re-pitch to the new incoming note.

```{r}
knitr::include_graphics(path = file.path(here::here(), "images", "Harmonic_Drone_Generator.png"))
```

## Cellular Degradation

This is a [paid plugin by Dillon Bastan](https://dillonbastan.gumroad.com/l/yyehc?layout=profile) which features six tone generating synthesis engines with a generator mechanism based on cellular growth and decay. If you're familiar with Conway's "Game of Life" then this concept might be familiar, but basically cells are generated and rules govern whether that cell will continue to survive or decay depending on the state of neighbouring cells. So if a new cell has surrounding cells which are alive, it will "survive", but if there aren't sufficient live cells neighbouring then it will decay. The "Born" rule will spawn new cells adjacent to the clicked cell

The six tone generators work in L+R pairs, so there are actually 12 sets of parameters that can be affected by the cell values if the "Voices" is set to 6. Different parameters of the tone generators are shown to the right of the square display and by clicking on the row for each parameter, it will set the value for that parameter using the "Value" scaling to the bottom left of the square display. This then scales the range of possible values for each parameter which shows the offset / lowest value (left % number) and the range (right % number).

I thoroughly recommend reviewing [Misty Jones' YouTube videos](https://www.youtube.com/watch?v=dM2ksxavJzI) on this plugin. She has comprehensively explored and described the various options and settings.

So what this gives us is a way of generating tones. You can quantize changes to Hz or rhythmic pulses. In the screenshot below, I'm modulating the "Draw XY" left and right boxes and the "Value" box through the Strange Mod modulator (also by Dillon Bastan). This means that the Strange Mod modulation device is essentially drawing values into the square display. Outside the captured image, I'm also using another instance of Strange Mod to set values for some of the parameters.

The sound the generator creates is a little odd, but through use of additional audio effects it's possible to create some interesting evolving drone textures.

```{r}
knitr::include_graphics(path = file.path(here::here(), "images", "Cellular_Degradation.png"))
```
